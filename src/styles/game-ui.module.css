/* Main Game UI Styles */
@import './variables.css';

/* Game HUD Container */
.gameHUD {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  height: 100dvh; /* Dynamic viewport height for mobile */
  pointer-events: none;
  z-index: var(--z-ui-base);
  font-family: 'Arial', sans-serif;
  
  /* Enable pointer events only on interactive elements */
  & > * {
    pointer-events: auto;
  }
}

/* Responsive grid layout */
.gameHUD[data-device="mobile"][data-orientation="portrait"] {
  display: grid;
  grid-template-areas:
    "score . buttons"
    ". . ."
    ". . ."
    "touchLeft . touchRight";
  grid-template-rows: auto 1fr 1fr auto;
  grid-template-columns: 1fr 1fr 1fr;
  padding: var(--space-sm);
  gap: var(--space-sm);
}

.gameHUD[data-device="mobile"][data-orientation="landscape"] {
  display: grid;
  grid-template-areas:
    "score . . buttons"
    "touchLeft . . touchRight";
  grid-template-rows: auto 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding: var(--space-sm);
  gap: var(--space-sm);
}

.gameHUD[data-device="tablet"] {
  display: grid;
  grid-template-areas:
    "score . . buttons"
    ". . . ."
    "touchLeft . . touchRight";
  grid-template-rows: auto 1fr auto;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding: var(--space-md);
  gap: var(--space-md);
}

.gameHUD[data-device="desktop"] {
  display: grid;
  grid-template-areas:
    "score . . . buttons"
    ". . . . ."
    ". . . . .";
  grid-template-rows: auto 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  padding: var(--space-lg);
  gap: var(--space-lg);
}

/* Grid area assignments */
.scoreArea {
  grid-area: score;
  justify-self: start;
  align-self: start;
}

.buttonsArea {
  grid-area: buttons;
  justify-self: end;
  align-self: start;
  margin-right: var(--space-sm);
}

.touchControlsLeft {
  grid-area: touchLeft;
  justify-self: start;
  align-self: end;
}

.touchControlsRight {
  grid-area: touchRight;
  justify-self: end;
  align-self: end;
  margin-right: var(--space-xl);
  display: flex;
  flex-direction: row;
  gap: var(--space-md);
  margin-bottom: 25vh;
  margin-right: 5vh;
}

/* Score Display */
.scoreDisplay {
  background: var(--bg-panel);
  color: var(--color-primary);
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--border-radius-md);
  border: var(--border-width) solid var(--color-secondary);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  
  font-size: var(--font-size-md);
  font-weight: bold;
  line-height: 1.2;
}

.scoreValue {
  color: var(--color-accent);
  font-size: var(--font-size-lg);
}

.spaceBucksValue {
  color: var(--color-primary);
  font-size: var(--font-size-sm);
}

/* Button Groups */
.buttonGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  align-items: center;
  margin-right: 5vh;
}

/* Base Button Styles */
.button {
  width: var(--button-size-md);
  height: var(--button-size-md);
  min-width: var(--touch-target-min);
  min-height: var(--touch-target-min);
  
  background: var(--bg-button);
  border: var(--border-width) solid var(--color-secondary);
  border-radius: var(--border-radius-md);
  
  display: flex;
  align-items: center;
  justify-content: center;
  
  font-size: var(--font-size-sm);
  font-weight: bold;
  color: var(--color-secondary);
  
  cursor: pointer;
  user-select: none;
  touch-action: manipulation;
  
  transition: 
    background-color var(--duration-fast) var(--ease-in-out),
    border-color var(--duration-fast) var(--ease-in-out),
    transform var(--duration-fast) var(--ease-in-out),
    box-shadow var(--duration-fast) var(--ease-in-out);
  
  backdrop-filter: blur(4px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.button:hover {
  background: var(--bg-button-hover);
  border-color: var(--color-primary);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
}

.button:active {
  background: var(--bg-button-active);
  transform: scale(0.95);
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.5);
}

/* Button variants */
.exitButton {
  border-color: var(--color-danger);
  color: var(--color-danger);
}

.exitButton:hover {
  background: rgba(255, 51, 0, 0.1);
  border-color: var(--color-danger);
}

.helpButton {
  border-color: var(--color-success);
  color: var(--color-success);
}

.helpButton:hover {
  background: rgba(0, 255, 0, 0.1);
  border-color: var(--color-success);
}

.minimapButton {
  border-color: var(--color-secondary);
  color: var(--color-secondary);
}

.minimapButton:hover {
  background: rgba(0, 255, 204, 0.1);
  border-color: var(--color-primary);
}

/* Touch Control Buttons */
.touchButton {
  width: var(--button-size-lg);
  height: var(--button-size-lg);
  border-radius: 50%;
  background: var(--bg-button);
  border: var(--border-width) solid var(--color-secondary);
  
  display: flex;
  align-items: center;
  justify-content: center;
  
  opacity: 0.8;
  backdrop-filter: blur(2px);
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);
  
  transition: 
    opacity var(--duration-fast) var(--ease-in-out),
    transform var(--duration-fast) var(--ease-in-out),
    background-color var(--duration-fast) var(--ease-in-out);
}

.touchButton:active {
  opacity: 1;
  transform: scale(0.95);
}

.tetherButton {
  color: var(--color-secondary);
  border-color: var(--color-secondary);
}

.tetherButton.active {
  background: rgba(0, 255, 136, 0.2);
  border-color: var(--color-primary);
  color: var(--color-primary);
}

.thrustButton {
  color: var(--color-warning);
  border-color: var(--color-warning);
}

.thrustButton.active {
  background: rgba(255, 153, 0, 0.2);
  border-color: var(--color-warning);
  color: var(--color-warning);
}

/* Virtual Joystick */
.joystickContainer {
  position: relative;
  width: var(--button-size-xl);
  height: var(--button-size-xl);
  opacity: 0;
  transition: opacity var(--duration-normal) var(--ease-in-out);
}

.joystickContainer.visible {
  opacity: 0.8;
}

.joystickOuter {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: var(--border-width) solid var(--color-secondary);
  border-radius: 50%;
  background: rgba(0, 255, 204, 0.1);
  backdrop-filter: blur(2px);
}

.joystickInner {
  position: absolute;
  width: 40%;
  height: 40%;
  background: var(--color-secondary);
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
  
  transition: transform var(--duration-fast) var(--ease-out);
}

/* Direction Indicator */
.directionIndicator {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2px;
  height: 60%;
  background: var(--color-secondary);
  transform-origin: bottom center;
  opacity: 0.7;
  border-radius: 1px;
  
  transition: 
    transform var(--duration-fast) var(--ease-out),
    opacity var(--duration-fast) var(--ease-in-out);
}

.directionIndicator::after {
  content: '';
  position: absolute;
  top: -4px;
  left: -3px;
  width: 0;
  height: 0;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-bottom: 8px solid var(--color-secondary);
}

/* Modal Overlays */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: var(--bg-overlay);
  backdrop-filter: blur(4px);
  z-index: var(--z-ui-modal);
  
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-lg);
  
  animation: fadeIn var(--duration-normal) var(--ease-out);
}

.modalContent {
  background: var(--bg-panel);
  border: var(--border-width) solid var(--color-secondary);
  border-radius: var(--border-radius-lg);
  padding: var(--space-xl);
  max-width: 90vw;
  max-height: 90vh;
  overflow-y: auto;
  
  animation: slideUp var(--duration-normal) var(--ease-out);
}

/* Main Menu Overlay (CSS-driven, responsive) */
.mainMenuOverlay {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  height: 100dvh;
  background-size: cover;
  background-position: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--space-xl);
  z-index: var(--z-ui-modal);
}

.brandRow {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: clamp(8px, 3vw, 32px);
}

.astroLogo {
  position: absolute;
  left: 50%;
  top: 25%;
  transform: translate(-50%, -50%);
  height: clamp(200px, 50vh, 10px);
  object-fit: contain;
}

.menuActions {
  position: absolute;
  top: 66%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  gap: var(--space-md);
}

/* Enlarge only main menu buttons, keep others unchanged */
.menuActions .button {
  width: auto;
  height: auto;
  min-width: unset;
  min-height: unset;
  padding: clamp(12px, 10vh,64px) clamp(24px, 6vw, 64px);
  font-size: var(--font-size-lg);
}

.bottomLogo {
  position: fixed;
  bottom: clamp(24px, 6vh, 75px);
  left: 50%;
  transform: translateX(-50%);
  height: clamp(24px, 12vh, 160px);
  object-fit: contain;
  opacity: 0.9;
}

.modalTitle {
  color: var(--color-primary);
  font-size: var(--font-size-xl);
  font-weight: bold;
  margin-bottom: var(--space-lg);
  text-align: center;
}

.modalText {
  color: #ffffff;
  font-size: var(--font-size-md);
  line-height: 1.5;
  margin-bottom: var(--space-md);
}

.modalButtons {
  display: flex;
  gap: var(--space-md);
  justify-content: center;
  margin-top: var(--space-lg);
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

@media (prefers-high-contrast: high) {
  .button {
    border-width: 3px;
  }
  
  .touchButton {
    border-width: 3px;
  }
}

/* High DPI adjustments */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
  .button,
  .touchButton {
    border-width: 1.5px;
  }
}

/* Safe area handling */
@supports (padding: env(safe-area-inset-top)) {
  .gameHUD {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
}
